1) Make it so that it reads the oldest database volume, checks if we have spare room in it and
incrementally add to that volume.
--> Choose to either increase the size of a database partition (ex. all database parititions were are
2GB, now we want them to be 4GB) or to just force the database to follow in suit of the original
parition size.
* I choose to follow the original partition size

2) Make an option for controlling the memory

Make a flag to modify the total file size.
Make sure the cutoff is in line with how LAST does it.

3) Make it threaded

void generateDifference(const std::string &filename){}

Problem is the buckets. Why are the buckets so much smaller then we think they should be?
prefixLength : prj
SubsetSeeds : prj

Make the buckets work, then we need to test them.

Scenario when there is only one volume